description: |
    Run codeception tests for end-to-end testing on a WordPress site.
    Codeception supports unit, wpunit, functional, and acceptance testing.

parameters:
    package_type:
        description: Is this a WordPress plugin or theme
        type: enum
        enum: ["plugin", "theme", "project"]
        default: project
    package_name:
        description: Name of the plugin or theme (directory name)
        type: string
        default: project

executor: wp-browser

steps:
    - run:
          name: Install apt needs
          command: |
            sudo apt-get update && \
            sudo apt-get -y install \
                default-mysql-client \
                libjpeg-dev \
                libpng-dev \
                libzip-dev

    - restore_cache:
          keys:
              - installwpbrowser-{{ .Environment.CACHE_VERSION }}

    - run:
          name: Install wp-browser globally
          command: |
            composer global require --optimize-autoloader \
                lucatume/wp-browser \
                codeception/module-asserts \
                codeception/module-cli \
                codeception/module-db \
                codeception/module-filesystem \
                codeception/module-phpbrowser \
                codeception/module-rest \
                codeception/module-webdriver \
                codeception/util-universalframework \
                league/factory-muffin \
                league/factory-muffin-faker \
                wp-cli/wp-cli

    - save_cache:
          key: installwpbrowser-{{ .Environment.CACHE_VERSION }}
          paths:
              - ~/.composer/vendor/

    - run:
          name: Set up Apache
          command: |
            echo 'ServerName localhost
            <Directory /var/www/html>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
            </Directory>' | sudo tee -a /etc/apache2/conf-available/localhost.conf > /dev/null
            sudo a2enmod rewrite
            sudo a2enconf localhost
            sudo service apache2 restart
            sudo chown circleci /var/www/html
            sudo rm -rf /var/www/html/*

    - run: dockerize -wait "tcp://$WORDPRESS_DB_HOST:3306" -timeout 1m

    - run:
          name: Set up env variables for codeception symlinking & testing
          command: |
            echo "export WORDPRESS_DOMAIN="$( hostname -i )"
                  export WORDPRESS_URL="http://$( hostname -i )"
                  export SYMLINK_YML="codeception.<< parameters.package_type >>.yml"
                  export SYMLINK_FOLDER="<< parameters.package_name >>"" >> "$BASH_ENV"
            source "$BASH_ENV"

    # Projects get installed in /var/www/html
    - when:
          condition:
              equal: [ project, << parameters.package_type >> ]
          steps:
              - install:
                    production: false
                    cache-name: codeception
                    include-composer: true
                    include-yarn: true
              - compile:
                    working_directory: /var/www/html
              - run:
                    name: Move test files to working directory
                    command: |
                        if [ -d vendor/wpengine/dxt-tester/lib/codecept ]; then
                            mv vendor/wpengine/dxt-tester/lib/codecept "$CIRCLE_WORKING_DIRECTORY"
                        fi

    # Plugins and themes get installed in /home/circleci/project/{name} and symlinked to /var/www/html/wp-content
    - when:
          condition:
              or:
                  - equal: [ theme, << parameters.package_type >> ]
                  - equal: [ plugin, << parameters.package_type >> ]
          steps:
              - checkout:
                    path: /home/circleci/project/<< parameters.package_name >>
              - compile:
                    working_directory: /home/circleci/project/<< parameters.package_name >>
              - run:
                    name: Move test files to working directory
                    working_directory: /home/circleci/project/<< parameters.package_name >>
                    command: |
                        mv vendor/wpengine/dxt-tester/lib/codecept "$CIRCLE_WORKING_DIRECTORY"
                        mv tests "$CIRCLE_WORKING_DIRECTORY"

    # Download and install WordPress
    - run:
          name: Download WordPress
          command: wp core download

    - run:
          name: Create htaccess file
          command: |
              echo '# BEGIN WordPress
              RewriteEngine On
              RewriteBase /
              RewriteRule ^index\.php$ - [L]
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteRule . /index.php [L]
              # END WordPress' | tee -a .htaccess > /dev/null

    - run:
          name: Config WordPress
          command: |
              wp config create \
                  --dbname="$WORDPRESS_DB_NAME" \
                  --dbuser="$WORDPRESS_DB_USER" \
                  --dbpass="$WORDPRESS_DB_PASSWORD" \
                  --dbhost="$WORDPRESS_DB_HOST" \
                  --dbprefix="$WORDPRESS_TABLE_PREFIX" \
                  --dbcharset="$WORDPRESS_DB_CHARSET" \
                  --skip-check

    - run:
          name: Install WordPress
          command: |
              wp core install \
                  --url="$WORDPRESS_URL" \
                  --title="Test" \
                  --admin_user="$WORDPRESS_ADMIN_USERNAME" \
                  --admin_password="$WORDPRESS_ADMIN_PASSWORD" \
                  --admin_email="$WORDPRESS_ADMIN_EMAIL"

    # Get ourselves a handy database dump for running tests
    - run:
          name: Export a database dump
          command: |
              mkdir -p wp-content/mu-plugins
              mkdir -p wp-content/plugins
              mkdir -p wp-content/themes
              wp db export wp-content/mysql.sql \
                  --skip-plugins \
                  --skip-themes \
                  --allow-root

    # Make sure .env exists in case the config depends on it
    - run: touch .env

    # Get base codeception dist files from the repo
    - run:
          name: Download codeception dist files
          command: |
              wget -nc -O codeception.dist.yml https://raw.githubusercontent.com/ryanshoover/orb-wpengine-deploy/master/lib/codeception.dist.yml
              wget -nc -O codeception.plugin.yml https://raw.githubusercontent.com/ryanshoover/orb-wpengine-deploy/master/lib/codeception.plugin.yml
              wget -nc -O codeception.project.yml https://raw.githubusercontent.com/ryanshoover/orb-wpengine-deploy/master/lib/codeception.project.yml
              wget -nc -O codeception.theme.yml https://raw.githubusercontent.com/ryanshoover/orb-wpengine-deploy/master/lib/codeception.theme.yml

    # Run all our tests, one suite at a time
    - run:
          name: Run Codeception acceptance tests
          command: codecept run acceptance --xml="$CIRCLE_WORKING_DIRECTORY/test-results/acceptance/results.xml"
    - run:
          name: Run Codeception functional tests
          command: codecept run functional --xml="$CIRCLE_WORKING_DIRECTORY/test-results/functional/results.xml"
    - run:
          name: Run Codeception unit tests
          command: codecept run unit --xml="$CIRCLE_WORKING_DIRECTORY/test-results/unit/results.xml"
    - run:
          name: Run Codeception wpunit tests
          command: codecept run wpunit --xml="$CIRCLE_WORKING_DIRECTORY/test-results/wpunit/results.xml"

    # Save the results
    - store_test_results:
          path: test-results

    - store_artifacts:
          path: tests/_output
